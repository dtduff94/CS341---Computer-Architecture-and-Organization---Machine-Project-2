Script started on Mon 04 Nov 2019 01:14:44 AM EST
tuser@tutor-vserver:~$ ls -al
total 268
drwxr-xr-x 8 tuser tuser  4096 Nov  4 01:14 [0m[01;34m.[0m
drwxr-xr-x 4 root  root   4096 Jul 20  2015 [01;34m..[0m
-rw------- 1 tuser tuser 11184 Nov  4 01:13 .bash_history
-rw-r--r-- 1 tuser tuser   220 Jul 20  2015 .bash_logout
-rw-r--r-- 1 tuser tuser  3184 Jul 20  2015 .bashrc
-rwxr-xr-x 1 tuser tuser 26842 Oct 22 13:45 [01;32mcount.lnx[0m
-rw-r--r-- 1 tuser tuser   190 Oct 22 13:45 count.opc
-rw-r--r-- 1 tuser tuser  2064 Oct 22 13:45 count.s
-rw-r--r-- 1 tuser tuser  1775 Oct 22 13:45 count.syms
drwxr-xr-x 2 tuser tuser  4096 Jul 20  2015 [01;34m.emacs.d[0m
drwxr-sr-x 2 tuser tuser  4096 Jul 20  2015 [01;34minclude[0m
drwxr-sr-x 2 tuser tuser  4096 Jul 20  2015 [01;34mlib[0m
-rw-r--r-- 1 tuser tuser  5046 Oct 22 04:22 mp2_part1_typescript_VMportion
-rw-r--r-- 1 tuser tuser  5911 Oct 22 04:04 mp2_warmup_typescript_part2
-rwxr-xr-x 1 tuser tuser 26788 Nov  4 00:58 [01;32mprintbin.lnx[0m
-rw-r--r-- 1 tuser tuser   675 Jul 20  2015 .profile
drwx------ 2 tuser tuser  4096 Jul 20  2015 [01;34m.ssh[0m
-rwxr-xr-x 1 tuser tuser 27884 Nov  3 19:50 [01;32mstrncpy.lnx[0m
drwxr-sr-x 2 tuser tuser  4096 Jul 20  2015 [01;34mtestaout[0m
-rw-r--r-- 1 tuser tuser   818 Jul 20  2015 test.c
drwxr-sr-x 2 tuser tuser  4096 Jul 20  2015 [01;34mtestelf[0m
-rw-r--r-- 1 tuser tuser   688 Jul 20  2015 testelf.syms
-rwxr-xr-x 1 tuser tuser 31650 Sep 16 12:21 [01;32mtest.lnx[0m
-rw-r--r-- 1 tuser tuser    67 Jul 20  2015 test.s
-rwxr-xr-x 1 tuser tuser   229 Oct 22 04:01 [01;32mtiny.lnx[0m
-rw-r--r-- 1 tuser tuser    71 Oct 22 04:01 tiny.opc
-rw-r--r-- 1 tuser tuser   103 Oct 22 04:01 tiny.s
-rw-r--r-- 1 tuser tuser  2210 Oct  1 01:11 tutor.c
-rwxr-xr-x 1 tuser tuser 29600 Oct  1 01:11 [01;32mtutor.lnx[0m
-rw-r--r-- 1 tuser tuser  4080 Oct  1 01:11 tutor.o
-rw-r--r-- 1 tuser tuser   725 Oct  1 01:11 tutor.opc
-rw-r--r-- 1 tuser tuser     0 Nov  4 01:14 typescript
tuser@tutor-vserver:~$ ls -alogoutgdb printbin.lnx[10Plogoutgdb printbin.lnxtar rem /dev/ttyS0[2Pgdb printbin.lnx[10Plogoutgdb printbin.lnx[10Plogouts -al[Kls -alogoutgdb printbin.lnx[10Plogoutgdb printbin.lnxtar rem /dev/ttyS0mtip -f printbin.lnxscp dtduff94@users.cs.umb.edu:cs341/mp2/printbin.lnx .[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[34Pmtip -f printbin.lnx
For command help, type ~?
For help on args, rerun without args
Code starts at 0x100100
Using board # 1 
Please type <CR> to confirm console setting: 
Setting console dev to COM2Console: colour EGA+ 80x25
COM1 at 0x03f8 (irq = 4) is a 16550A
COM2 at 0x02f8 (irq = 3) is a 16550A

                 Welcome to UMB Tutor for the PC
   UMB Tutor is a 32-bit protected-mode PC debugger/downloader,
       based on Linux, UMB Tutor for m68k, and remote gdb.
UMB Tutor is free software and you are welcome to distribute copies
of it under certain conditions.  There is no warranty for this program.
The copyright and warranty provisions follow the Gnu general public
license, available for view in gdb and elsewhere.  Full sources available.
--bugs, suggestions, questions to eoneil@cs.umb.edu

Exception 3 at EIP=00057a9b: Breakpoint
Tutor> ~downloading printbin.lnx

.......Done.

Download done, setting EIP to 100100.
Tutor> gdb
Setting gdb dev to COM1, starting gdb (CTRL-C to abort).
enter the character's ascii value in hex: 
ab
The binary format for character « is 1010 1011

Tutor> ~q 
Quit handler: 
killing process 1883 Leaving board #1
tuser@tutor-vserver:~$ exit
exit

Script done on Mon 04 Nov 2019 01:24:01 AM EST
:	nop
0x1001d3 <main+79>:	nop
0x1001d4 <main+80>:	leave  
0x1001d5 <main+81>:	ret    
0x1001d6 <main+82>:	nop
0x1001d7 <main+83>:	nop
0x1001d8 <main+84>:	push   %ebp
0x1001d9 <main+85>:	mov    %esp,%ebp
0x1001db <main+87>:	mov    0x8(%ebp),%edx
0x1001de <main+90>:	mov    $0x1018e8,%edi
0x1001e3 <main+95>:	mov    %edi,%eax
0x1001e5 <main+97>:	mov    $0x80,%ebx
0x1001ea <main+102>:	call   0x100201 <main+125>
0x1001ef <main+107>:	xor    %ecx,%ecx
0x1001f1 <main+109>:	inc    %edi
0x1001f2 <main+110>:	call   0x100201 <main+125>
0x1001f7 <main+115>:	mov    $0x1018e8,%eax
---Type <return> to continue, or q <return> to quit---
0x1001fc <main+120>:	call   0x100213 <main+143>
0x100201 <main+125>:	mov    $0x4,%ecx
0x100206 <main+130>:	test   %bl,%dl
0x100208 <main+132>:	je     0x10020d <main+137>
0x10020a <main+134>:	movb   $0x31,(%edi)
0x10020d <main+137>:	inc    %edi
0x10020e <main+138>:	shr    %ebx
0x100210 <main+140>:	loop   0x100206 <main+130>
0x100212 <main+142>:	ret    
0x100213 <main+143>:	mov    %ebp,%esp
0x100215 <main+145>:	pop    %ebp
0x100216 <main+146>:	ret    
0x100217 <main+147>:	nop
0x100218 <main+148>:	int3   
0x100219 <main+149>:	ret    
0x10021a <main+150>:	xor    %eax,%eax
0x10021c <main+152>:	mov    $0x101a7c,%edi
0x100221 <main+157>:	mov    $0x101a8c,%ecx
0x100226 <main+162>:	sub    %edi,%ecx
0x100228 <main+164>:	cld    
0x100229 <main+165>:	rep stos %al,%es:(%edi)
0x10022b <main+167>:	ret    
0x10022c <init_devio>:	push   %ebp
0x10022d <init_devio+1>:	mov    %esp,%ebp
0x10022f <init_devio+3>:	mov    0x55104,%eax
0x100234 <init_devio+8>:	mov    %eax,0x1018f4
0x100239 <init_devio+13>:	leave  
0x10023a <init_devio+14>:	ret    
0x10023b <init_devio+15>:	nop
0x10023c <init>:	push   %ebp
0x10023d <init+1>:	mov    %esp,%ebp
0x10023f <init+3>:	push   %ebx
0x100240 <init+4>:	cmpl   $0x0,0x8(%ebp)
0x100244 <init+8>:	jl     0x100274 <init+56>
0x100246 <init+10>:	cmpl   $0x64,0x8(%ebp)
0x10024a <init+14>:	jg     0x100274 <init+56>
0x10024c <init+16>:	mov    0x1018f4,%eax
0x100251 <init+21>:	mov    0x8(%ebp),%ecx
0x100254 <init+24>:	mov    %ecx,%edx
0x100256 <init+26>:	shl    $0x2,%edx
0x100259 <init+29>:	add    %ecx,%edx
0x10025b <init+31>:	add    %edx,%edx
0x10025d <init+33>:	add    %ecx,%edx
0x10025f <init+35>:	lea    0x0(,%edx,4),%ecx
0x100266 <init+42>:	mov    (%eax),%eax
---Type <return> to continue, or q <return> to quit---
0x100268 <init+44>:	cmpb   $0x0,0x18(%eax,%ecx,1)
0x10026d <init+49>:	jne    0x10027c <init+64>
0x10026f <init+51>:	jmp    0x100274 <init+56>
0x100271 <init+53>:	nop
0x100272 <init+54>:	nop
0x100273 <init+55>:	nop
0x100274 <init+56>:	mov    0xc(%ebp),%eax
0x100277 <init+59>:	jmp    0x1002b0 <init+116>
0x100279 <init+61>:	nop
0x10027a <init+62>:	nop
0x10027b <init+63>:	nop
0x10027c <init+64>:	mov    0x1018f4,%eax
0x100281 <init+69>:	mov    0x8(%ebp),%edx
0x100284 <init+72>:	mov    %edx,%ecx
0x100286 <init+74>:	shl    $0x2,%ecx
0x100289 <init+77>:	add    %edx,%ecx
0x10028b <init+79>:	add    %ecx,%ecx
0x10028d <init+81>:	add    %edx,%ecx
0x10028f <init+83>:	lea    0x0(,%ecx,4),%edx
0x100296 <init+90>:	mov    (%eax),%eax
0x100298 <init+92>:	mov    0xc(%ebp),%ecx
0x10029b <init+95>:	push   %ecx
0x10029c <init+96>:	mov    0x8(%ebp),%ecx
0x10029f <init+99>:	push   %ecx
0x1002a0 <init+100>:	mov    (%eax,%edx,1),%ebx
0x1002a3 <init+103>:	call   *%ebx
0x1002a5 <init+105>:	add    $0x8,%esp
0x1002a8 <init+108>:	mov    %eax,%edx
0x1002aa <init+110>:	mov    %edx,%eax
0x1002ac <init+112>:	jmp    0x1002b0 <init+116>
0x1002ae <init+114>:	nop
0x1002af <init+115>:	nop
0x1002b0 <init+116>:	mov    -0x4(%ebp),%ebx
0x1002b3 <init+119>:	leave  
0x1002b4 <init+120>:	ret    
0x1002b5 <init+121>:	nop
0x1002b6 <init+122>:	nop
0x1002b7 <init+123>:	nop
0x1002b8 <rawputc>:	push   %ebp
0x1002b9 <rawputc+1>:	mov    %esp,%ebp
0x1002bb <rawputc+3>:	sub    $0x4,%esp
0x1002be <rawputc+6>:	push   %esi
0x1002bf <rawputc+7>:	push   %ebx
0x1002c0 <rawputc+8>:	mov    0xc(%ebp),%ebx
0x1002c3 <rawputc+11>:	mov    %bl,-0x1(%ebp)
---Type <return> to continue, or q <return> to quit---
0x1002c6 <rawputc+14>:	cmpl   $0x64,0x8(%ebp)
0x1002ca <rawputc+18>:	jne    0x1002db <rawputc+35>
0x1002cc <rawputc+20>:	mov    0x1018f4,%eax
0x1002d1 <rawputc+25>:	mov    0x1c(%eax),%esi
0x1002d4 <rawputc+28>:	call   *%esi
0x1002d6 <rawputc+30>:	mov    %eax,%eax
0x1002d8 <rawputc+32>:	mov    %eax,0x8(%ebp)
0x1002db <rawputc+35>:	cmpl   $0x0,0x8(%ebp)
0x1002df <rawputc+39>:	jl     0x10030c <rawputc+84>
0x1002e1 <rawputc+41>:	cmpl   $0x64,0x8(%ebp)
0x1002e5 <rawputc+45>:	jg     0x10030c <rawputc+84>
0x1002e7 <rawputc+47>:	mov    0x1018f4,%eax
0x1002ec <rawputc+52>:	mov    0x8(%ebp),%ecx
0x1002ef <rawputc+55>:	mov    %ecx,%edx
0x1002f1 <rawputc+57>:	shl    $0x2,%edx
0x1002f4 <rawputc+60>:	add    %ecx,%edx
0x1002f6 <rawputc+62>:	add    %edx,%edx
0x1002f8 <rawputc+64>:	add    %ecx,%edx
0x1002fa <rawputc+66>:	lea    0x0(,%edx,4),%ecx
0x100301 <rawputc+73>:	mov    (%eax),%eax
(gdb) x/200i 0x100100[C[C[C[C[C[C[10Pi regset $eip=0x100100
(gdb) b *0x100201
Breakpoint 1 at 0x100201: file printbinc.c, line 16.
(gdb) c
Continuing.

Breakpoint 1, 0x00100201 in main () at printbinc.c:16
16	printbinc.c: No such file or directory.
	in printbinc.c
(gdb) c
Continuing.

Breakpoint 1, 0x00100201 in main () at printbinc.c:16
16	in printbinc.c
(gdb) c
Continuing.

Program received signal SIGTRAP, Trace/breakpoint trap.
startupc () at startup.c:4
4	startup.c: No such file or directory.
	in startup.c
(gdb) q
A debugging session is active.

	Inferior 1 [Remote target] will be killed.

Quit anyway? (y or n) y
]0;tuser@tutor-vserver: ~tuser@tutor-vserver:~$ exit
exit

Script done on Mon 04 Nov 2019 01:23:49 AM EST
